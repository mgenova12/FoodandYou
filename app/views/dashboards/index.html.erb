<h1>Search Food</h1>
<div id="app">

<div class="search">
  <div class="buttonHolder">
    <%= form_tag "", method: :get do %>
      <div align="center" class="select">
        <v-select v-model="foodSearch" :debounce="250" :options="options" placeholder="Search..."></v-select>
      <button v-on:click="search($event)" class="btn" type="submit" value="Search" > Search</button>
      </div>
    <% end %>
  </div>

    <div class="underSearch" align="center">
      <div id="element1">
          <h4>Food Name: {{ food.name }}</h4> 
      </div>
      <div id="element1">|</div>
      <div id="element2">
          <h4>Serving Size: {{ food.serving_size }} {{ food.unit }}</h4>
      </div>
      <div id="element1">|</div>
      <div id="element2">
        <h4>Quantity: </h4>
      </div>
      <div id="element1">
        <select v-model="selected" v-on:change="quantity" class="form-control quant" >
          <option v-bind:value="{ number: 1 }">1</option>
          <option v-bind:value="{ number: 2 }">2</option>
          <option v-bind:value="{ number: 3 }">3</option>
          <option v-bind:value="{ number: 4 }">4</option>
          <option v-bind:value="{ number: 5 }">5</option>
        </select>
        </div>
    </div>

    <div class="row display">
      <div class="col-md-2">
        <h4>Calories</h4>
          <div class="well">
            <p v-if="calTotal > 0">{{ calTotal }}</p>
            <p v-else> {{food.calories}} </p>
          </div>
      </div>

      <div class="col-md-2">
        <h4>Protein (g)</h4>
          <div class="well">
            <p v-if="proTotal > 0"> {{ proTotal }} </p>
            <p v-else>{{ food.protein }}</p>
          </div>
      </div>

      <div class="col-md-2">
        <h4>Sugar (g)</h4>
          <div class="well">
          <p v-if="sugarTotal > 0">{{ sugarTotal }}</p>
          <p v-else>{{ food.sugar }}</p>
          </div>
      </div>

      <div class="col-md-2">
        <h4>Total Fat (g)</h4>
          <div class="well">
          <p v-if="fatTotal > 0"> {{ fatTotal }} </p>
          <p v-else>{{ food.totalfat }}</p>
          </div>
      </div>

      <div class="col-md-2">
        <h4>Sodium (mg)</h4>
          <div class="well">
          <p v-if="sodiumTotal > 0">{{ sodiumTotal }}</p>
          <p v-else>{{ food.sodium }}</p></div>
      </div> 

       <div class="col-md-2">
        <h4>Cholesterol (mg)</h4>
        <div class="well">
          <p v-if="cholesterolTotal > 0"> {{cholesterolTotal}}</p>
          <p v-else>{{ food.cholesterol }}</p>
        </div>
      </div>
    
      <div align="center">
        <button v-on:click="addFood()" class="btn">Add food to Meal</button>
        <button v-on:click="savedMeal()" onclick="location.href='/my_meals'" class="btn">Save Meal</button>
      </div>
    </div>

  <div class="foodList"> 
    <ul style="list-style: none;">
      <li v-for="addedFood in addedFoods" ><button v-on:click="removeFood(addedFood)" class="btn">X</button> {{ addedFood.quantity }} x {{ addedFood.name }} </li>
    </ul>
  </div>

  <div id="container" style="width:100%; height:400px;"></div>

</div>

</div>

<script type="text/javascript">

Highcharts.chart('container', {
    chart: {
        type: 'column'
    },
    title: {
        text: 'Monthly Average Rainfall'
    },
    subtitle: {
        text: 'Source: WorldClimate.com'
    },
    xAxis: {
        categories: [
            'Jan',
            'Feb',
            'Mar',
            'Apr',
            'May',
            'Jun',
            'Jul',
            'Aug',
            'Sep',
            'Oct',
            'Nov',
            'Dec'
        ],
        crosshair: true
    },
    yAxis: {
        min: 0,
        title: {
            text: 'Rainfall (mm)'
        }
    },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
            '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true
    },
    plotOptions: {
        column: {
            pointPadding: 0.2,
            borderWidth: 0
        }
    },
    series: [{
        name: 'Tokyo',
        data: [49.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]

    }, {
        name: 'New York',
        data: [83.6, 78.8, 98.5, 93.4, 106.0, 84.5, 105.0, 104.3, 91.2, 83.5, 106.6, 92.3]

    }, {
        name: 'London',
        data: [48.9, 38.8, 39.3, 41.4, 47.0, 48.3, 59.0, 59.6, 52.4, 65.2, 59.3, 51.2]

    }, {
        name: 'Berlin',
        data: [42.4, 33.2, 34.5, 39.7, 52.6, 75.5, 57.4, 60.4, 47.6, 39.1, 46.8, 51.1]

    }]
});


</script>


